***Antipattern***
Count: 0

***Pattern***
Count: 30
GET  /v2/things/THING_TOKEN/firmwares/download/FIRMWARE_ID Download firmware Download the firmware using the firmware ID (from the previous API call) and thing token.
PUT  /v2/me/grant Sharing resources When a user wants to give access to his or her resources to another user, the app can grant the endpoint. But this time the app has to pass the email of the granted user. The granted user will also receive an email to confirm this action.
GET  /v2/classes/me/ID_COLLECTION Get collection of objects Returns all the collection's objects sorted by primary key in descending order.
GET  /v2/things/THING_TOKEN/resources/RESOURCE_KEY This method returns the values of the resource with the specified RESOURCE_KEY from the corresponding THING_TOKEN. To read data, use the operation GET /things/ with the thing token and the key that you are using to store the values.
GET  Itget/v2/things/THING_TOKEN/resources Get Resources Returns the names of the resources of the thing.
POST  /v2/things Activates a thing with an activation code. The result is a thing token. You will be able to retrieve this thing token at any time from the panel.
PUT  /v2/me/resources/description/THING_ID Update thing's description There is a special resource called description that can contain meta data about the thing. This meta data could be the name of the thing (chosen by the user), geocoordinates, JSON objects and any other data the developer wants to put there. This resource is accesible the same way as all the resources with get and put requests. Before you modify this resources, you have to get the actual description value, change the properties you want to modify and then store the complete document again.
GET  /v2/me/resources Get resources Get the user's resources and the things associated to each resource.
POST  /v2/register Register an app user at thethings.iO Platform. This endpoint also logs the user in (returns the session token and roles), so you don't have to do another API call to log him in.
GET  /v2/things/THING_TOKEN/resources/$MAGIC_RESOURCE Thing Magic Resources Read Magic resources are specials resources that start with $, and have some special behaviors, like trigger some common task, or update static data. These resources can be used as the others using read and write operations.
GET  /v2/me/resources/RESOURCE?subscribe=true&keepAlive=TIME_MS Subscribe to resource values Endpoint to subscribe to the real-time updates. Once subscribed, you will receive a message each time that the resource receives a new value. If there are no updates the server will send {} after the interval you specified for keepAlive. You should also keep a timer, and if you don�t receive updates after the keepAlive time is expired, you have to resubscribe. This could happen if the Wi-Fi is down or something happens to the connection. To subscribe from a browser we recommend to use Websocket. REST API subscription is not reliable on browsers.
DELETE  /v2/things/THING_TOKEN/tags/TAG_ID Delete Tags
GET  /v2/things/THING_TOKEN/tags Get Tags Returns the tags of the thing.
GET  /v2/utils/date/?format=FORMAT Get Server Date Retrieve the date of the server. The parameter format accepts two values: 'UTC' and 'unix_timestamp'.
DELETE  /v2/classes/me/ID_COLLECTION/PRIMARY_KEY Delete an object Delete an object by _id.
GET  /v2/me/resources/RESOURCE Get resource values This endpoint returns the values of the specified resource.
POST  /v2/classes/me/ID_COLLECTION Store an object This endpoint lets you store an object as a JSON string. If you don�t specify an _id, the system will automatically assign a random ID. Returns error if the _id already exists for that collection.
GET  /v2/me/settings Get User Settings Sometimes the app needs to store additional data about the user like gender, avatar, hair color, etc. In that case the app can use the endpoint '/me/settings' in order to set and get the user�s settings. The user�s settings are not meant to store large amounts of data. It�s more likely a small key/value store. Retrieve the settings object.
GET  /v2/classes/me/ID_COLLECTION?subscribe=true&keepAlive=TIME_MS Subscribe to collection Subscribes to collection updates. When somebody updates the collection you will be notified.
GET  /v2/classes/me/ID_COLLECTION/PRIMARY_KEY Get Object Returns the object stored with the specified key.
GET  /v2/things/THING_TOKEN Thing Subscribe With this method you can subscribe to the thing channel and get real-time updates from all the thing's keys (resources). The subscription endpoint creates a streaming channel and we keep the channel open depending on the keep alive that you send. If no keep alive is set, your router or our server will close the channel at its sole discretion. You will need a compatible client. To subscribe from a browser we recommend to use Websocket. REST API subscription is not reliable on browsers. To test the real-time updates from the command line, you will need to open two consoles. One for the subscription curl command, and another to do the curl write commands.
GET  /v2/things/THING_TOKEN/firmwares/latest Get latest firmware version Query for the latest firmware informations for the model of the thing corresponding to the specified thing token. It will return all latest firmware registered for every micro-controller (MCU).
PUT  /v2/things/ID_COLLECTION/PRIMARY_KEY Update an object Change the values of an object. If there are some values which are not overwritten, these values will not be deleted.
POST  /v2/me/things Link a thing from an app with the thing token The easiest way to link a thing is when the user provides the thing token to the app. The thing token could be printed in the users' manual, or printed on a card inside the packaging or received after registering the thing at your product's web. There are many ways to do this. After this, the app has access to the user's thing data.
POST  /v2/login Login an app user at thethings.iO Platform. Returns the session token and roles. The object roles identifies the resources and things that the user has authorized the app to access.
POST  /v2/things/THING_TOKEN/tags Add TagAdd tag to a thing.
GET  /v2/me/resources/description Get thing's description There is a special resource called description that can contains meta data about the thing. This meta data could be the name of the thing (chosen by the user), geocoordinates, JSON objects and any other data the developer wants to put there. This resource is accessible the same way as all the resources with get and put requests. Before you modify this resources, you have to get the actual description value, change the properties you want to modify and then store the complete document again.
PUT  /v2/me/settings Update User Settings Sometimes the app needs to store additional data about the user like gender, avatar, hair color, etc. In that case the app can use the endpoint '/me/settings' in order to set and get the user�s settings. The user�s settings are not meant to store large amounts of data. It�s more likely a small key/value store. Updates the settings key/value object. There is a special key password that will update the user�s password with the app.
POST  /v2/things/THING_TOKEN Thing Magic Resources Write Magic resources are specials resources that start with $, and have some special behaviors, like trigger some common task, or update static data. These resources can be used as the others using read and write operations.
DELETE  /v2/me/things How to Unlink a thing If you want to remove the ownership of a thing from a user, a procedure called unlink thing is necessary which allows the platform to know that the user is no longer the owner of the thing. In order to unlink the thing the user must be logged in and the thing must be activated and previously linked. Unlink thing from an app with the thing ID The thing lD could be retrieved from the GET:/me/things or GET:/me/resources After this, the app does not have access to the user's thing data anymore.
