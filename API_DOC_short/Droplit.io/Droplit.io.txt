GET >>  /v0/api/account/ >>  Get a user's authentication status. To generate a user token from the Droplit portal, navigate to the Security tab, then select Users. Select the desired user, then, under Actions, select Generate token. That token is the user token to be included in the request.
POST >>  /v0/api/account/logoff >>  Log a user out of the Droplit system.
PUT >>  /v0/api/account/ >>  Update a user's account.
GET >>  /v0/api/ecosystems/:id/assets >>  Get Assets
GET >>  /v0/api/ecosystems/:id/assets/:name >>  Get an Asset. Get a specific asset accessible by an ecosystem.
PUT >>  /v0/api/ecosystems/:id/assets/:name >>  Create/Update Asset. Create a new asset, or update an existing one.
DELETE >>  /v0/api/ecosystems/:id/assets/:name >>  Delete Asset. Remove an existing asset.
POST >>  /v0/api/auth/shortcode/create >>  Create Shortcode. Generate a shortcode that will be consumed for authentication.
POST >>  /v0/api/auth/shortcode/consume >>  Consume Shortcode. Read and validate a provided shortcode.
GET >>  /v0/api/clients/ >>  List clients in an ecosystem.
POST >>  /v0/api/clients/ >>  Create a client. Create a client. An account token or server token may be used to run this endpoint.
GET >>  /v0/api/clients/:id >>  Create a client. Create a client. An account token or server token may be used to run this endpoint.
PUT >>  /v0/api/clients/:id >>  Update a client. Update a client. An account token or server token may be used to run this endpoint.
DELETE >>  /v0/api/clients/:id >>  Delete a client. Delete a client. An account token or server token may be used to run this endpoint.
GET >>  /v0/api/clients/:id/tokens >>  List client tokens. List client tokens. An account token or server token may be used to run this endpoint.
POST >>  /v0/api/clients/:id/tokens >>  Create a client token. Create a client token. An account token or server token may be used to run this endpoint.
GET >>  /v0/api/clients/:id/tokens/:tokenId >>  Get a client token. Get a client token. An account token or server token may be used to run this endpoint.
PUT >>  /v0/api/clients/:id/tokens/:tokenId >>  Update a client token. Update a client token. An account token or server token may be used to run this endpoint.
DELETE >>  /v0/api/clients/:id/tokens/:tokenId >>  Delete a client token. Delete a client token. An account token or server token may be used to run this endpoint.
POST >>  /v0/api/clients/:id/tokens/:tokenId/regenerate >>  Regenerate a client token. Regenerate a client token. An account token or server token may be used to run this endpoint.
GET >>  /v0/api/conduits/ >>  List conduits. Get a list of all the conduits installed within an ecosystem.
GET >>  /v0/api/conduits/:id >>  Get a conduit. Get a specific conduit.
PUT >>  /v0/api/conduits/:id >>  Update a conduit. Update a conduit's parameters.
DELETE >>  /v0/api/conduits/:id >>  Delete a conduit. Delete a specific conduit.
POST >>  /v0/api/conduits/:id/conduit-activations >>  Activate a conduit. Authenticate through a third party to activate a conduit.
GET >>  /v0/api/conduits/:id/conduit-activations >>  List a conduit's activations. Get a list of all of a conduit's activations.
GET >>  /v0/api/conduits/:id/conduit-activations/:activationId >>  Get a conduit's activation. Get a specific conduit activation.
DELETE >>  /v0/api/conduits/:id/conduit-activations/:activationId >>  Remove a conduit's activation. Deactivate a specific instance of a conduit's activation. Upon deletion, a temporary delete session will be created for the newly removed conduit activation. This delete session may be used to undelete the removed activation via the Deleted API.
POST >>  /v0/api/conduits/:id/conduit-activations/:activationId/reactivate >>  Reactivate a conduit. Reactivate a particular conduit activation.
GET >>  /v0/api/conduits/:id/conduit-activations/:activationId/local-devices >>  List local devices. Get all of the local devices operating through a conduit activation.
GET >>  /v0/api/conduits/:id/conduit-activations/:activationId/local-devices/:localId >>  Get a local device. Get the data of a specific local device operating through a conduit activation.
POST >>  /v0/api/conduits/:id/tokens >>  Create a token. Creat a conduit token.
GET >>  /v0/api/conduits/:id/tokens >>  List tokens. Get a conduit's tokens.
GET >>  /v0/api/conduits/:id/tokens/:tokenId >>  Get a token. Get a specific token from a conduit.
DELETE >>  /v0/api/conduits/:id/tokens/:tokenId >>  Delete a token. Delete a conduit's token. Upon deletion, a temporary delete session will be created for the newly removed token. This delete session may be used to undelete the removed token via the Deleted API.
GET >>  /v0/api/deleted >>  List All. List all of the delete sessions available to the holder of the passed authorization token.
GET >>  /v0/api/deleted/:sessionId. >>  Get Info for Session. Get information regarding a specific delete session.
DELETE >>  /v0/api/deleted/:sessionId >>  Permanently Delete Records. Permanently deletes the record by deleting the delete session. When a record is deleted, a delete session is created that enables that record to be restored. By deleting that delete session, recovery of the record becomes impossible. An account token or server token may be used to run this endpoint.
GET >>  /v0/api/deleted/:sessionId/records >>  Get All Deleted Records. Gets all the resources part of a specific delete session.
POST >>  /v0/api/deleted/:sessionId/undelete >>  Undelete a Record. Place the deleted resource, along with all of its records, back into its previous parent container.
GET >>  /v0/api/devices/ >>  List devices. Get all the devices in an environment. An account token, server token, or user token may be used to run this endpoint.
POST >>  /v0/api/devices/ >>  Create a device. An account token, server token, or user token may be used to run this endpoint.
GET >>  /v0/api/devices/:id >>  Get a device. List the information of a particular device. An account token, server token, or user token may be used to run this endpoint.
PUT >>  /v0/api/devices/:id >>  Update a device. Update a device. An account token, server token, or user token may be used to run this endpoint.
DELETE >>  /v0/api/devices/:id >>  Delete a device. Delete a device. An account token, server token, or user token may be used to run this endpoint.
GET >>  /v0/api/devices/:id/history >>  View the action history of a device. An account token, server token, or user token may be used to run this endpoint.
GET >>  /v0/api/devices/:id/services >>  List the service properties of a device. List the service properties of a device. This endpoint lists the defined service properties of a device. Defined properties are those that have been assigned a value. If a device implements a service class, properties of that service class which are not set will not be returned. To list all properties of a device, including those that are not defined, get the properties of each service class implemented by the device. An account token, server token, or user token may be used to run this endpoint.
GET >>  /v0/api/devices/:id/services/:selector >>  Get a device service property. Get a device service property. This endpoint retrieves the specified service selector property from all devices in the environment on which the property is defined. All properties of a specific service class can be retrieved, by using the name of the service class as the path selector, or a specific property can be retrieved, by using the name of the service class followed by the property name. When specific property names are used, only one property can be retrieved at a time. For example, use “LightColor” to retrieve all properties of the LightColor service class, among all devices that implement that class. Use “LightColor.hue” to retrieve all values of LightColor.hue among the devices which implement it. Each property retrieved is contained in its own JSON object within the response array. If desired, the “refresh” parameter can be used to make sure that service selectors are specified properly. If this parameter is specified, the endpoint will explicitly reject service selectors that do not exist. By default, the endpoint ignores malformed service selectors, and in those cases returns an empty array of property information. An account token, server token, or user token may be used to run this endpoint.
PUT >>  /v0/api/devices/:id/services/:selector >>  Update Service Property. Call a device service method. An account token, server token, or user token may be used to run this endpoint. If there are any webhooks in the ecosystem listening for Set service notifications, their response, an example of which may be seen on the Webhooks v2 page, will include both the user's account type and ID.
PUT >>  /v0/api/devices/:id/services >>  Update Multiple Service Properties. Alter the service properties of a device. An account token, server token, or user token may be used to run this endpoint. If there are any webhooks in the ecosystem listening for Set service notifications, their response, an example of which may be seen on the Webhooks v2 page, will include both the user's account type and ID.
DELETE >>  /v0/api/devices/:id/services/:selector >>  Delete a device service property. Delete a device service property. This endpoint can delete an individual service property, or all the properties of a particular service. To delete a particular property, specify the selector as the fully qualified name of the property, as “SERVICE-NAME.PROPERTY.” To delete all the properties associated with a service, specify the service name without attaching a property name. An account token, server token, or user token may be used to run this endpoint.
POST >>  /v0/api/devices/:id/services/:selector >>  Call Service Method. Call a device service method. An account token, server token, or user token may be used to run this endpoint.